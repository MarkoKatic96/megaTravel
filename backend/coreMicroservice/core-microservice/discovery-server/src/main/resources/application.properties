eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
spring.application.name=discovery-server
server.port = 8761


 
 #Service center deletes the waiting time (in seconds) of this service instance, and the time interval is the heartbeat time received by the last service center.
eureka.instance.lease-expiration-duration-in-seconds=90
 # The interval at which the instance sends a heartbeat to the service center to indicate that the service instance is available.
eureka.instance.lease-renewal-interval-in-seconds=30
 #Instance, registration service center, the number of communication opened by default
eureka.instance.registry.default-open-for-traffic-count=1
 #Number of renewals per minute
eureka.instance.registry.expected-number-of-renews-per-min=1


################server Configuration associated with client####################
 # Open self-protection mode. No matter what the situation, the server will maintain a certain number of services. Avoid network problems between client and server, and a large number of services are cleared.
eureka.server.enable-self-preservation=true
 # Enable the timed task to clear invalid services. Default 1 minute
eureka.server.eviction-interval-timer-in-ms=60000
 # How long, clear expired delta data
eureka.server.delta-retention-timer-interval-in-ms=1000
 # , is it also available to the client?
eureka.server.disable-delta=false
 #eureka Whether the server records the identity of the client header
#eureka.server.log-identity-headers=true

 #Request frequency limiter
eureka.server.rate-limiter-burst-size=10
 # Whether to enable the request frequency limiter
eureka.server.rate-limiter-enabled=false
 #Request frequency average
eureka.server.rate-limiter-full-fetch-average-rate=100
 # Whether to limit the frequency request to the standard client. If false, only limit non-standard clients
eureka.server.rate-limiter-throttle-standard-clients=false
 #Register service, average value of request frequency for pulling service list data
eureka.server.rate-limiter-registry-fetch-average-rate=500
 #Set the trusted client list
eureka.server.rate-limiter-privileged-clients=
 # In the set time range class, the percentage expected to be renewed with the client.
eureka.server.renewal-percent-threshold=0.85


 ################Association between server node and node####################
 #  replication data is in the request, always compressed
eureka.server.enable-replicated-request-compression=false
 # Indicates whether replication between cluster nodes should be batched to improve network efficiency.
eureka.server.batch-replication=false
 #Allow the maximum number of replication events that are backed up to the backup pool. This backup pool is responsible for other events except status updates. This value can be set according to memory size, timeout and replication traffic.
eureka.server.max-elements-in-peer-replication-pool=10000
 #Allow the maximum number of replication events that are backed up to the stateful backup pool
eureka.server.max-elements-in-status-replication-pool=10000
 #Multiple service centers synchronize the maximum idle time of information threads with each other
eureka.server.max-idle-thread-age-in-minutes-for-peer-replication=15
 #Status synchronization thread maximum idle time
eureka.server.max-idle-thread-in-minutes-age-for-status-replication=15
 #Service registry each instance of the maximum number of threads to copy data to each other
eureka.server.max-threads-for-peer-replication=20
 #Service registry each instance of the maximum number of threads copying state data
eureka.server.max-threads-for-status-replication=1
 #Communication time between #instance and data replication
eureka.server.max-time-for-replication=30000
 #The minimum number of normal peer-to-peer services. -1 indicates that the service center is a single node.
eureka.server.min-available-instances-for-peer-replication=-1
 #The minimum number of threads opened between #instance and mutual replication
eureka.server.min-threads-for-peer-replication=5
 #Between #instance for state replication, the minimum number of threads opened
eureka.server.min-threads-for-status-replication=1
 #Number of times that can be retried when copying data between #instance
eureka.server.number-of-replication-retries=5
 #eureka How often to update data between nodes. The default is 10 minutes.
eureka.server.peer-eureka-nodes-update-interval-ms=600000
 #eureka The time interval between service status updates.
eureka.server.peer-eureka-status-refresh-time-interval-ms=0
 #eureka Peer-to-peer connection timeout
eureka.server.peer-node-connect-timeout-ms=200
 #eureka idle time after peer node connection
eureka.server.peer-node-connection-idle-timeout-seconds=30
 #Read data connection timeout between nodes
eureka.server.peer-node-read-timeout-ms=200
 #eureka server Total number of connections between nodes
eureka.server.peer-node-total-connections=1000
 #eureka server Maximum number of single machines connected between nodes
eureka.server.peer-node-total-connections-per-host=10
 #The number of times eureka tried to obtain registration information when the service node was started
eureka.server.registry-sync-retries=10
 # When eureka tries to obtain registration information multiple times when the service node starts up
eureka.server.registry-sync-retry-wait-ms=500
 # When the eureka server is started, you cannot wait for the instance registration information from the peer node. How long should it wait?
eureka.server.wait-time-in-ms-when-sync-empty=0
 