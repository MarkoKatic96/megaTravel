//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.01 at 10:28:48 PM CEST 
//


package com.megatravel.agentglobalback.model;

import javax.xml.bind.annotation.XmlRegistry;

import com.megatravel.agentglobalback.dto.AgentDTO;
import com.megatravel.agentglobalback.dto.AgentPrijavaDTO;
import com.megatravel.agentglobalback.dto.AgentRegistracijaDTO;
import com.megatravel.agentglobalback.dto.LokalneRezervacijeDTO;
import com.megatravel.agentglobalback.dto.NovaPorukaDTO;



/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the io.spring.guides.gs_producing_web_service package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: io.spring.guides.gs_producing_web_service
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link GetCountryRequest }
     * 
     */
    public GetAgentRequest createGetAgentRequest() {
        return new GetAgentRequest();
    }

    /**
     * Create an instance of {@link GetCountryResponse }
     * 
     */
    public GetAgentResponse createGetAgentResponse() {
        return new GetAgentResponse();
    }

    /**
     * Create an instance of {@link Country }
     * 
     */
    public Agent createAgent() {
        return new Agent();
    }
    
    public LoginRequest createLoginRequest() {
    	return new LoginRequest();
    }
    
    public LoginResponse createLoginResponse() {
    	return new LoginResponse();
    }
    
    public AgentPrijavaDTO createAgentPrijavaDTO() {
    	return new AgentPrijavaDTO();
    }
    
    public AgentDTO createAgentDTO() {
    	return new AgentDTO();
    }
    
    public AgentRegistracijaDTO createAgentRegistracijaDTO() {
    	return new AgentRegistracijaDTO();
    }
    
    public EditRequest createEditRequest() {
    	return new EditRequest();
    }
    
    public GetAgentByEmailRequest createGetAgentByEmailRequest() {
    	return new GetAgentByEmailRequest();
    }
    
    public GetAgentByEmailResponse createGetAgentByEmailResponse() {
    	return new GetAgentByEmailResponse();
    }
    
    public KategorijaSmestaja createKategorijaSmestaja() {
    	return new KategorijaSmestaja();
    }
    
    public LokalneRezervacijeDTO createLokalneRezervacijeDTO() {
    	return new LokalneRezervacijeDTO();
    }
    
    public NovaPorukaDTO createNovaPorukaDTO() {
    	return new NovaPorukaDTO();
    }
    
    public ValidateTokenResponse createValidateTokenResponse() {
    	return new ValidateTokenResponse();
    }
    
    public ValidateTokenRequest createValidateTokenRequest() {
    	return new ValidateTokenRequest();
    }
    
    public TipSmestaja createTipSmestaja() {
    	return new TipSmestaja();
    }
    
    public TAdresa createTAdresa() {
    	return new TAdresa();
    }
    
    public Smestaj createSmestaj() {
    	return new Smestaj();
    }
    
    public SignUpResponse createSignUpResponse() {
    	return new SignUpResponse();
    }
    
    public SignUpRequest createSignUpRequest() {
    	return new SignUpRequest();
    }
    
    public SamostalnaRezervacija createSamostalnaRezervacija() {
    	return new SamostalnaRezervacija();
    }
    
    public Rezervacija createRezervacija() {
    	return new Rezervacija();
    }
    
    public Poruka createPoruka() {
    	return new Poruka();
    }
}
